apiVersion: v1
kind: Service
metadata:
  name: flask-service
  labels:
    app: cryptosite
    run: flask
    tier: backend
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: cryptosite
    run: flask
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
spec:
  selector:
    matchLabels:
      app: cryptosite
      run: flask
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        app: cryptosite
        run: flask
        tier: backend
    spec:
      containers:
      - name: flask
        image: omdv/crypto-git-tracker-flask
        env:
        - name: APP_SETTINGS
          value: project.config.DevelopmentConfig
        - name: DATABASE_TEST_URL
          value: postgres://user:secretpassword@postgres-release-postgresql:5432/analytics
        - name: DATABASE_URL
          value: postgres://user:secretpassword@postgres-release-postgresql:5432/analytics
        - name: GIT_TOKEN
          value: bdbae9884072bba932f755ee370fd85f001a2928
        - name: GIT_USER
          value: omdv
        ports:
        - containerPort: 5000
          protocol: TCP
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: postgres-service
#   labels:
#     app: cryptosite
#     run: postgres
#     tier: backend
# spec:
#   type: ClusterIP
#   ports:
#   - port: 5432
#     targetPort: 5432
#     protocol: TCP
#     name: postgres
#   selector:
#     app: cryptosite
#     run: postgres
#     tier: backend
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: postgres-deployment
# spec:
#   selector:
#     matchLabels:
#       app: cryptosite
#       run: postgres
#       tier: backend
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: cryptosite
#         run: postgres
#         tier: backend
#     spec:
#       containers:
#       - name: postgres
#         image: omdv/crypto-git-tracker-db
#         env:
#         - name: POSTGRES_USER
#           value: user
#         - name: POSTGRES_PASSWORD
#           value: password
#         ports:
#         - containerPort: 5432
#           protocol: TCP
#         volumeMounts:
#         - name: postgres-storage
#           mountPath: /var/lib/postgresql/db-data
#       volumes:
#         - name: postgres-storage
#           persistentVolumeClaim:
#             claimName: postgres-pv-claim
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: postgres-pv-claim
# spec:
#   selector:
#     matchLabels:
#       app: cryptosite
#       run: postgres
#       tier: volume
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 400M